{% extends 'templates/erp/layout.twig' %}

{% block title %}{{ parent() }} - Novo Agendamento{% endblock %}

{% block stylesheets %}
  {{ parent() }}
  {{ css('libs/jquery/plugins/autocomplete/autocomplete.min.css') }}
  {{ css('libs/semantic-ui/components/calendar.min.css') }}
  
  <style>
    /* Estilos para o formulário de agendamentos */
    .ui.form .fields .field .ui.calendar {
      width: 100%;
    }
    
    /* Seções do formulário */
    .section-block {
      margin-bottom: 2em;
      padding: 1.5em;
    }
    
    .section-block:last-of-type {
      margin-bottom: 1em;
    }
    
    /* Blocos de detalhes */
    .details-block {
      margin-top: 1em;
      padding: 1em;
      background-color: #f8f9fa;
      border: 1px solid #e9ecef;
      border-radius: .28571429rem;
      display: none;
    }
    
    .details-block.active {
      display: block;
    }
    
    .details-block h4 {
      margin-top: 0;
      color: #2185d0;
      font-size: 1em;
    }
    
    .details-block p {
      margin-bottom: 0.5em;
      font-size: 0.95em;
    }
    
    /* Autocomplete customizations */
    .ui.search .results .result {
      padding: 0.85714286em 1.14285714em;
    }
    
    .ui.search .results .result .content .title {
      font-weight: bold;
      color: #1e70bf;
      font-size: 1.1em;
    }
    
    .ui.search .results .result .content .description {
      margin-top: 0.3em;
      color: #767676;
      font-size: 0.9em;
    }
    
    /* Estados do formulário */
    .field.error .ui.dropdown,
    .field.error .ui.input input,
    .field.error input,
    .field.error textarea,
    .field.error select {
      background: #fff6f6;
      border-color: #e0b4b4;
      color: #9f3a38;
    }
    
    .helper {
      color: #9f3a38;
      font-size: 0.92857143em;
      margin-top: 0.25em;
      display: block;
    }
    
    /* Mensagens informativas */
    .ui.info.message {
      background-color: #f8ffff;
    }
    
    /* Dropdown de técnicos */
    .technician-item .description {
      color: #767676;
      font-size: 0.9em;
    }
    
    .technician-item .text {
      font-weight: 500;
    }
    
    .technician-location {
      font-style: italic;
      color: #2185d0;
    }
    
    /* Seção oculta */
    .hidden-section {
      display: none !important;
    }
    
    /* Loading */
    .loading-overlay {
      position: relative;
    }
    
    .loading-overlay.loading::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(255, 255, 255, 0.8);
      z-index: 1000;
    }
  </style>
{% endblock %}

{% block content %}
<div class="ui main basic segment">
  <h2 class="ui blue header">
    <i class="calendar plus outline icon"></i>
    <div class="content">
      Novo Agendamento
      <div class="sub header">Preencha os dados para criar um novo agendamento técnico</div>
    </div>
  </h2>

  {# Mensagens de erro gerais #}
  {% if hasError('general') %}
    <div class="ui error message transition visible">
      <i class="close icon"></i>
      <div class="header">Erro</div>
      <p>{{ getError('general') }}</p>
    </div>
  {% endif %}

  <form class="ui form" id="appointmentForm" method="POST" action="{{ path_for('ERP\\Appointments\\Add') }}" autocomplete="off">
    {{ csrf.field | raw }}
    <input type="hidden" name="_method" value="POST">
    
    {# Campos ocultos para dados selecionados #}
    <input type="hidden" name="customer_id" id="customer_id" value="{{ getValue('customer_id') }}">
    <input type="hidden" name="subsidiary_id" id="subsidiary_id" value="{{ getValue('subsidiary_id') }}">

    {# SEÇÃO 1: Identificação do Cliente #}
    <div class="ui segment section-block">
      <h3 class="ui dividing header">
        <i class="user icon"></i>
        Identificação do Cliente
      </h3>
      
      <div class="field required{{ cssError('customer_name') }}">
        <label>Nome do Cliente</label>
        <div class="ui search" id="customer_search">
          <div class="ui icon input">
            <input class="prompt" type="text" name="customer_name" id="customer_name" 
                   placeholder="Digite o nome do cliente..." 
                   value="{{ getValue('customer_name') }}" 
                   autocomplete="off">
            <i class="search icon"></i>
          </div>
          <div class="results"></div>
        </div>
        {% if hasError('customer_name') %}
          <small class="helper">{{ getError('customer_name') }}</small>
        {% endif %}
      </div>
      
      {# Bloco de detalhes do cliente selecionado #}
      <div class="details-block" id="customer_details">
        <h4><i class="info circle icon"></i>Cliente Selecionado</h4>
        <div class="ui relaxed list">
          <div class="item">
            <i class="user icon"></i>
            <div class="content">
              <strong id="customer_name_display">Nome do Cliente</strong>
              <div class="description">
                <span id="customer_document_display">Documento</span>
              </div>
            </div>
          </div>
          <div class="item">
            <i class="building icon"></i>
            <div class="content">
              <strong id="customer_subsidiary_display">Unidade/Filial</strong>
              <div class="description">
                <span id="customer_address_display">Endereço</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    {# SEÇÃO 2: Identificação do Veículo #}
    <div class="ui segment section-block">
      <h3 class="ui dividing header">
        <i class="car icon"></i>
        Identificação do Veículo
      </h3>
      
      <div class="field required{{ cssError('vehicle_plate') }}">
        <label>Placa do Veículo</label>
        <div class="ui icon input">
          <input type="text" name="vehicle_plate" id="vehicle_plate" 
                 placeholder="ABC-1234" 
                 value="{{ getValue('vehicle_plate') }}" 
                 maxlength="8">
          <i class="car icon"></i>
        </div>
        {% if hasError('vehicle_plate') %}
          <small class="helper">{{ getError('vehicle_plate') }}</small>
        {% endif %}
      </div>
      
      <div class="field{{ cssError('vehicle_model') }}">
        <label>Modelo do Veículo</label>
        <div class="ui input">
          <input type="text" name="vehicle_model" id="vehicle_model" 
                 placeholder="Ex: Civic, Corolla..." 
                 value="{{ getValue('vehicle_model') }}">
        </div>
        {% if hasError('vehicle_model') %}
          <small class="helper">{{ getError('vehicle_model') }}</small>
        {% endif %}
      </div>
    </div>

    {# SEÇÃO 3: Tipo de Serviço #}
    <div class="ui segment section-block">
      <h3 class="ui dividing header">
        <i class="wrench icon"></i>
        Tipo de Serviço
      </h3>
      
      <div class="field required{{ cssError('service_type') }}">
        <label>Serviço a ser Realizado</label>
        <select name="service_type" id="service_type" class="ui dropdown">
          <option value="">Selecione o tipo de serviço</option>
          <option value="installation" {% if getValue('service_type') == 'installation' %}selected{% endif %}>Instalação de Rastreador</option>
          <option value="maintenance" {% if getValue('service_type') == 'maintenance' %}selected{% endif %}>Manutenção</option>
          <option value="repair" {% if getValue('service_type') == 'repair' %}selected{% endif %}>Reparo</option>
          <option value="removal" {% if getValue('service_type') == 'removal' %}selected{% endif %}>Retirada de Equipamento</option>
          <option value="inspection" {% if getValue('service_type') == 'inspection' %}selected{% endif %}>Inspeção/Vistoria</option>
          <option value="emergency" {% if getValue('service_type') == 'emergency' %}selected{% endif %}>Emergência</option>
        </select>
        {% if hasError('service_type') %}
          <small class="helper">{{ getError('service_type') }}</small>
        {% endif %}
      </div>
    </div>

    {# SEÇÃO 4: Data e Hora #}
    <div class="ui segment section-block">
      <h3 class="ui dividing header">
        <i class="calendar icon"></i>
        Data e Hora do Atendimento
      </h3>
      
      <div class="two fields">
        <div class="field required{{ cssError('scheduled_date') }}">
          <label>Data do Agendamento</label>
          <div class="ui calendar" id="schedule_calendar">
            <div class="ui input left icon">
              <i class="calendar icon"></i>
              <input type="text" name="scheduled_date" id="scheduled_date" 
                     placeholder="DD/MM/AAAA" 
                     value="{{ getValue('scheduled_date') }}">
            </div>
          </div>
          {% if hasError('scheduled_date') %}
            <small class="helper">{{ getError('scheduled_date') }}</small>
          {% endif %}
        </div>
        
        <div class="field required{{ cssError('scheduled_time') }}">
          <label>Horário</label>
          <select name="scheduled_time" id="scheduled_time" class="ui dropdown">
            <option value="">Selecione o horário</option>
            {% set current_time = getValue('scheduled_time') %}
            {% for hour in 8..18 %}
              {% for minute in ['00', '30'] %}
                {% if not (hour == 12 and minute == '30') %}
                  {% set time_val = '%02d:%s'|format(hour, minute) %}
                  <option value="{{ time_val }}" {% if current_time == time_val %}selected{% endif %}>{{ time_val }}</option>
                {% endif %}
              {% endfor %}
            {% endfor %}
          </select>
          {% if hasError('scheduled_time') %}
            <small class="helper">{{ getError('scheduled_time') }}</small>
          {% endif %}
        </div>
      </div>
      
      {# Campo oculto para datetime combinado #}
      <input type="hidden" name="scheduled_at" id="scheduled_at" value="{{ getValue('scheduled_at') }}">
    </div>

    {# SEÇÃO 5: Técnico Responsável #}
    <div class="ui segment section-block">
      <h3 class="ui dividing header">
        <i class="user tie icon"></i>
        Técnico Responsável
      </h3>
      
      <div class="field required{{ cssError('technician_id') }}">
        <label>Técnico</label>
        <div class="ui fluid selection dropdown">
          <input name="technician_id" type="hidden" value="{{ getValue('technician_id') }}">
          <i class="dropdown icon"></i>
          <div class="default text">Escolha um técnico...</div>
          <div class="menu">
            {% set technicianID = getValue('technician_id') %}
            {% for technician in technicians %}
              <div class="item technician-item" 
                   {% if technician.value == technicianID %}selected{% endif %}
                   data-value="{{ technician.value }}">
                <span class="description">
                  <span class="technician-location">{{ technician.city }}/{{ technician.state }}</span>
                  {% if technician.description %}
                    <br>{{ technician.description }}
                  {% endif %}
                </span>
                <span class="text">{{ technician.name }}</span>
              </div>
            {% endfor %}
          </div>
        </div>
        {% if hasError('technician_id') %}
          <small class="helper">{{ getError('technician_id') }}</small>
        {% endif %}
      </div>
    </div>

    {# SEÇÃO 6: Local do Atendimento #}
    <div class="ui segment section-block">
      <h3 class="ui dividing header">
        <i class="map marker icon"></i>
        Local do Atendimento
      </h3>
      
      <div class="field required{{ cssError('service_address') }}">
        <label>Endereço</label>
        <div class="ui input">
          <input type="text" name="service_address" id="service_address" 
                 placeholder="Rua, Av..." 
                 value="{{ getValue('service_address') }}">
        </div>
        {% if hasError('service_address') %}
          <small class="helper">{{ getError('service_address') }}</small>
        {% endif %}
      </div>
      
      <div class="three fields">
        <div class="field{{ cssError('service_number') }}">
          <label>Número</label>
          <div class="ui input">
            <input type="text" name="service_number" id="service_number" 
                   placeholder="123" 
                   value="{{ getValue('service_number') }}">
          </div>
          {% if hasError('service_number') %}
            <small class="helper">{{ getError('service_number') }}</small>
          {% endif %}
        </div>
        
        <div class="field{{ cssError('service_district') }}">
          <label>Bairro</label>
          <div class="ui input">
            <input type="text" name="service_district" id="service_district" 
                   placeholder="Centro" 
                   value="{{ getValue('service_district') }}">
          </div>
          {% if hasError('service_district') %}
            <small class="helper">{{ getError('service_district') }}</small>
          {% endif %}
        </div>
        
        <div class="field{{ cssError('service_city') }}">
          <label>Cidade</label>
          <div class="ui input">
            <input type="text" name="service_city" id="service_city" 
                   placeholder="São Paulo" 
                   value="{{ getValue('service_city') }}">
          </div>
          {% if hasError('service_city') %}
            <small class="helper">{{ getError('service_city') }}</small>
          {% endif %}
        </div>
      </div>
    </div>

    {# SEÇÃO 7: Observações #}
    <div class="ui segment section-block">
      <h3 class="ui dividing header">
        <i class="sticky note icon"></i>
        Observações Adicionais
      </h3>
      
      <div class="field{{ cssError('notes') }}">
        <label>Observações</label>
        <textarea name="notes" id="notes" rows="3" 
                  placeholder="Informações adicionais sobre o agendamento...">{{ getValue('notes') }}</textarea>
        {% if hasError('notes') %}
          <small class="helper">{{ getError('notes') }}</small>
        {% endif %}
      </div>
      
      <div class="field">
        <div class="ui checkbox">
          <input type="checkbox" name="is_emergency" id="is_emergency" value="1" {% if getValue('is_emergency') %}checked{% endif %}>
          <label>Agendamento de emergência (prioridade alta)</label>
        </div>
      </div>
    </div>

    {# Botões de ação #}
    <div class="ui hidden divider"></div>
    
    <div class="field">
      <button type="submit" class="ui large green fluid button" id="save_button">
        <i class="save icon"></i> Salvar Agendamento
      </button>
    </div>
    
    <div class="field">
      <a href="{{ path_for('ERP\\Appointments\\Calendar') }}" class="ui large fluid button">
        <i class="cancel icon"></i> Cancelar
      </a>
    </div>
  </form>
</div>
{% endblock %}

{% block scripts %}
  {{ parent() }}
  {{ lib('semantic-ui/components/calendar.min.js') }}
  {{ lib('jquery/plugins/autocomplete/autocomplete.min.js') }}
  {{ lib('jquery/plugins/masked.input/masked.input.min.js') }}
  
  {% set getCustomerAutocomplete = { 'URL': 'ERP\\Appointments\\Customers\\Autocomplete', 'method': 'PATCH' } %}
  
  <script>
    $(document).ready(function() {
      // Inicializar componentes Semantic UI
      $('.ui.dropdown').dropdown();
      $('.ui.checkbox').checkbox();
      
      // Inicializar calendário
      $('#schedule_calendar').calendar({
        type: 'date',
        monthFirst: false,
        today: true,
        minDate: new Date(),
        formatter: { 
          date: function (date, settings) { 
            if (!date) return ''; 
            var day = date.getDate(); 
            var month = date.getMonth() + 1; 
            var year = date.getFullYear(); 
            return (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year; 
          }
        }
      });
      
      // Máscaras
      if ($.fn.mask) {
        $('#vehicle_plate').mask('AAA-0000');
      }
      
      // Configurar autocomplete de cliente
      $('#customer_search').search({
        apiSettings: {
          url: '{{ path_for(getCustomerAutocomplete.URL) }}',
          method: '{{ getCustomerAutocomplete.method }}',
          beforeSend: function(settings) {
            settings.data = {
              searchTerm: settings.urlData.query,
              limit: 10
            };
            return settings;
          },
          onResponse: function(response) {
            var results = { results: [] };
            
            if (response && response.result === 'OK' && response.data) {
              $.each(response.data, function(index, customer) {
                results.results.push({
                  title: customer.name,
                  description: customer.document + ' | ' + customer.subsidiary_name,
                  customer_data: customer
                });
              });
            }
            
            return results;
          }
        },
        minCharacters: 3,
        onSelect: function(result, response) {
          if (result && result.customer_data) {
            var customer = result.customer_data;
            
            // Preencher campos ocultos
            $('#customer_id').val(customer.id);
            $('#subsidiary_id').val(customer.subsidiary_id);
            
            // Exibir detalhes do cliente
            $('#customer_name_display').text(customer.name);
            $('#customer_document_display').text(customer.document);
            $('#customer_subsidiary_display').text(customer.subsidiary_name);
            
            var address = customer.address + (customer.streetnumber ? ', ' + customer.streetnumber : '');
            if (customer.district) address += ' - ' + customer.district;
            if (customer.city_name) address += ', ' + customer.city_name;
            if (customer.state) address += '/' + customer.state;
            
            $('#customer_address_display').text(address);
            $('#customer_details').addClass('active');
            
            // Auto-preencher endereço de atendimento (se vazio)
            if (!$('#service_address').val()) {
              $('#service_address').val(customer.address);
              $('#service_number').val(customer.streetnumber);
              $('#service_district').val(customer.district);
              $('#service_city').val(customer.city_name);
            }
          }
          return false;
        }
      });
      
      // Combinar data e hora antes do submit
      $('#appointmentForm').on('submit', function(e) {
        var date = $('#scheduled_date').val();
        var time = $('#scheduled_time').val();
        
        if (date && time) {
          var dateParts = date.split('/');
          if (dateParts.length === 3) {
            var datetime = dateParts[2] + '-' + dateParts[1] + '-' + dateParts[0] + ' ' + time + ':00';
            $('#scheduled_at').val(datetime);
          }
        }
        
        // Adicionar loading ao botão
        $('#save_button').addClass('loading').prop('disabled', true);
      });
      
      // Fechar mensagens
      $('.ui.message .close.icon').on('click', function() {
        $(this).closest('.message').transition('fade');
      });
    });
  </script>
{% endblock %}