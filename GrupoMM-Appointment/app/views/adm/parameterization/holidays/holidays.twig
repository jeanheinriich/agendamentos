{% extends 'templates/adm/layout.twig' %}
{% import "templates/adm/macros/blueTooltip.twig" as tooltip %}
{% block title %}{{ parent() }} - Gerenciamento de feriados{% endblock %}
{% block stylesheets %}
  {{ parent() }}

  {{ css('libs/datatables/dataTables.semanticui.min.css') }}
  {{ css('libs/datatables/plugins/select/select.semanticui.min.css') }}
  {{ css('libs/semantic-ui/components/calendar.min.css') }}
  {{ css('libs/jquery/plugins/autocomplete/autocomplete.min.css') }}
  {{ css('responsive.min.css') }}
  {{ css('searchbar.min.css') }}
  {{ css('dialog.min.css') }}
  <style>
    /* --------------------------------------------------------------
     * Personalizações na barra de pesquisas apenas para este módulo
     * -------------------------------------------------------------- */
    .ui.main.basic.segment .searchbar.fields .field.cityandstate {
      flex-grow: 1;
      min-width: 236px;
    }
    .ui.adaptable.dropdown {
      min-width: 9em;
    }
    @media only screen and (min-width: 1206px) {
      .ui.main.basic.segment .flex {
        flex-grow: 0;
      }
    }
    @media only screen and (max-width: 767px) {
      .ui.main.basic.segment .searchbar.fields .field.searchbox {
        min-width: 100px;
        width: calc(100% - 47px);
      }
      .ui.main.basic.segment .searchbar.fields .field.searchbox input {
        max-width: calc(100% - 125px);
      }
      .ui.adaptable.dropdown {
        min-width: 6em;
      }
      .ui.adaptable.dropdown > .text {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
      .ui.adaptable.dropdown .menu > .item {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
    @media only screen and (max-width: 350px) {
      .ui.main.basic.segment .searchbar.fields .field.searchbox input {
        max-width: calc(100% - 136px);
      }
      .ui.main.basic.segment .searchbar.fields .field.selectbox {
        max-width: calc(100% - 9px);
      }
      .ui.adaptable.dropdown > .text {
        max-width: 4em;
      }
    }
    
    #result_wrapper {
      width: 100%;
    }
  </style>
{% endblock stylesheets %}
{% block content %}
  {% set add    = { 'URL': 'ADM\\Parameterization\\Holidays\\Add', 'method': 'GET' } %}
  {% set getPDF = { 'URL': 'ADM\\Parameterization\\Holidays\\Get\\PDF', 'method': 'GET' } %}
  <div class="ui main basic segment">
    <!-- Início cabeçalho módulo -->
    <h2 class="ui blue header">
      <table cellspacing="0" cellpadding="0">
        <tbody>
          <tr>
            <td class="mobile hidden">
              {{ icon('adm/holidays.svg', 'Feriados') }}
            </td>
            <td>
              <div class="content">
                Gerenciamento de feriados
                <div class="sub header">
                  Permite gerenciar os feriados cadastrados no sistema
                  numa determinada cidade e estado.
                </div>
              </div>
            </td>
          </tr>
        </tbody>
      </table>
    </h2>
    <!-- Fim cabeçalho módulo -->
    
    <!-- Início barra de pesquisa -->
    <div class="ui vertical segment noborder">
      <div class="ui form">
        <div class="searchbar fields">
          <div class="flex">
            {% if authorization.getAuthorizationFor(add.URL, add.method) %}
            <div class="field button">
              <button class="ui primary icon button"
                      data-tooltip="Adiciona um feriado"
                      data-position="top left" type="button"
                      onclick="add();">
                <i class="add icon"></i>
              </button>
            </div>
            {% endif %}
            {% if authorization.getAuthorizationFor(getPDF.URL, getPDF.method) %}
            <div class="field button">
              <button class="ui black icon button"
                      data-tooltip="Permite gerar um PDF com a relação de feriados nesta cidade"
                      data-position="top left" type="button"
                      onclick="getPDF();">
                <i class="file pdf icon"></i>
              </button>
            </div>
            {% endif %}

            <div class="field year">
              <div class="ui left icon input">
                <i class="calendar alternate icon"></i>
                <input placeholder="Ano..." type="text"
                       name="year" id="year"
                       value="{{ holiday.year }}">
              </div>
            </div>

            <div class="field cityandstate">
              <div class="ui right labeled input">
                <input placeholder="Informe a cidade..." type="text"
                       name="cityName" id="cityName"
                       value="{{ holiday.city.name }}">
                <div class="ui basic label"
                     id="stateAcronym">
                   {{ holiday.city.state }}
                </div>
                <input type="hidden" name="cityID" id="cityID"
                       value="{{ holiday.city.id }}" >
                <input type="hidden" name="state" id="state"
                       value="{{ holiday.city.state }}" >
              </div>
            </div>
          </div>

          <div class="flex">
            <div class="field searchbox">
              <div class="ui action input">
                <input type="text" id="searchValue"
                       placeholder="Digite o nome do feriado que procura..."
                       value="{{ holiday.name }}">
                <div class="ui basic adaptable months selection dropdown button"
                     id="months">
                  <input name="month" id="month" type="hidden"
                         value="{{ holiday.month.id }}">
                  <div class="default text">
                    <span class="mobile hidden">{{ holiday.month.name }}</span>
                    <span class="mobile only">{{ holiday.month.short }}</span>
                  </div>
                  <i class="dropdown icon"></i>
                  <div class="menu special">
                    <div class="item" data-value="0">Todos</div>
                    {% for month in months %}
                      <div class="item" data-value="{{ month.id }}"
                           month-name="{{ month.name }}">
                        <span class="mobile hidden">{{ month.name }}</span>
                        <span class="mobile only">{{ month.short }}</span>
                      </div>
                    {% endfor %}
                  </div>
                </div>
                <button class="ui primary icon button"
                        data-tooltip="Localiza um feriado"
                        data-position="top right"
                        type="button" onclick="searchLoad();">
                  <i class="search icon"></i>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Fim barra de pesquisa -->

    <!-- Início Datatables -->
    <table id="result"
           class="ui unstackable compact selectable striped celled table nowrap"
           width="100%" cellspacing="0">
      <thead>
        <tr>
          <th>ID</th>
          <th>Feriado</th>
          <th>Abrangência</th>
          <th>Mês</th>
          <th>Dia</th>
          <th>Dia da semana</th>
          <th {{ tooltip.add('left', 'Permite remover o feriado') }}><i class="remove darkred icon"></i></th>
        </tr>
      </thead>
      <tbody>
      </tbody>
    </table>
    <!-- Fim Datatables -->
  </div>
{% endblock %}
{% block dialogs %}
  {% include 'templates/adm/partials/dialogs/error.twig' %}
  {% include 'templates/adm/partials/dialogs/info.twig' %}
  {% include 'templates/adm/partials/dialogs/question.twig' %}
  {% include 'templates/adm/partials/dialogs/warning.twig' %}
    
  <!-- Start audio error -->
  <audio id="errorSound">
    <source src="/sounds/error.ogg" type="audio/ogg">
    <source src="/sounds/error.mp3" type="audio/mpeg">
    <source src="/sounds/error.wav" type="audio/wav">
  </audio>
  <!-- End audio error -->
{% endblock dialogs %}
{% block scripts %}
  {{ parent() }}
  
  {{ lib('semantic-ui/components/calendar.min.js') }}
  {{ lib('semantic-ui/components/requisitions.min.js') }}
  {{ lib('jquery/plugins/autocomplete/autocomplete.min.js') }}
  {{ lib('jquery/plugins/masked.input/masked.input.min.js') }}
  {{ lib('datatables/jquery.dataTables.min.js') }}
  {{ lib('datatables/dataTables.semanticui.min.js') }}
  {{ lib('datatables/plugins/handleErrors/handleErrors.js') }}
  {{ lib('datatables/plugins/select/dataTables.select.min.js') }}
  {{ lib('datatables/plugins/select/select.semanticui.min.js') }}
  {{ lib('datatables/formatters/DeleteFormatter.min.js') }}
  {{ lib('datatables/formatters/MonthFormatter.min.js') }}
  {{ lib('datatables/formatters/DayOfWeekFormatter.min.js') }}
  
  {% set getData = { 'URL': 'ADM\\Parameterization\\Holidays\\Get', 'method': 'PATCH' } %}
  {% set add     = { 'URL': 'ADM\\Parameterization\\Holidays\\Add', 'method': 'GET' } %}
  {% set edit    = { 'URL': 'ADM\\Parameterization\\Holidays\\Edit', 'method': 'GET' } %}
  {% set remove  = { 'URL': 'ADM\\Parameterization\\Holidays\\Delete', 'method': 'DELETE' } %}
  {% set getPDF  = { 'URL': 'ADM\\Parameterization\\Holidays\\Get\\PDF', 'method': 'GET' } %}

  {% set getCityNameCompletion = { 'URL': 'ADM\\Parameterization\\Cadastral\\Cities\\Autocompletion\\Get', 'method': 'PATCH' } %}
  
  {% apply minify %}
  <script>
    var
      table
    ;

    $(document).ready(function() {
      // --------------------------------[ Componentes da Searchbar ]---
      $('.searchbar .ui.dropdown')
        .dropdown()
      ;
      $("input[name='cityName']")
        .autocomplete(cityNameCompletionOptions)
      ;
      $('#cityName')
        .keypress(forceSearch)
      ;
      $("input[name='year")
        .mask({ type: 'year'})
        .blur(yearHandler);
      $('#year')
        .keypress(forceSearch)
      ;
      $('#searchValue')
        .keypress(forceSearch)
      ;

      // ----------------------------------------------[ Datatables ]---

      // Atualiza a tabela para reajustar as colunas em caso de
      // alternância da barra lateral
      $('#ResizeSidebarMenu').click(function() {
        setTimeout(function() {
          table
            .columns
            .adjust()
          ;
        }, 500);
      });

      // Atualiza a tabela para reajustar as colunas em caso de
      // redimensionamento da janela
      $(window).resize(function() {
        setTimeout(function() {
          table
            .columns
            .adjust()
          ;
        }, 500);
      });

      table = $('#result').DataTable({
        pagingType: "first_last_numbers",
        lengthChange: false,
        searching: false,
        scrollX: true,
        language: {
          url: "{{ i18n('datatables/plugins/i18n/Portuguese-Brasil.json') }}",
        },
        columnDefs: [
          { "targets": 0,
            "name": "id",
            "data": "id",
            "visible": false,
            "orderable": false },
          { "targets": 1,
            "name": "name",
            "data": "name",
            "visible": true,
            "orderable": true },
          { "targets": 2,
            "name": "scope",
            "data": "geographicscope",
            "className": "dt-center",
            "visible": true,
            "orderable": false,
            "width": "100px" },
          { "targets": 3,
            "name": "fulldate",
            "data": "month",
            "className": "dt-center",
            "visible": true,
            "orderable": true,
            "width": "100px",
            "render": monthFormatter },
          { "targets": 4,
            "name": "day",
            "data": "day",
            "className": "dt-center",
            "visible": true,
            "orderable": true,
            "width": "20px" },
          { "targets": 5,
            "name": "dayofweek",
            "data": "dayofweek",
            "className": "dt-center",
            "visible": true,
            "orderable": false,
            "width": "100px",
            "render": dayOfWeekFormatter },
          { "targets": 6,
            "name": "delete",
            "data": "delete",
            "visible": true,
            "orderable": false,
            "width": "10px",
            "render": deleteFormatter("Remover este feriado") }
        ],
        order: [[ 3, 'asc' ]],
        select: {
          style: 'single',
          items: 'cell'
        },
        processing: true,
        serverSide: true,
        ajax: {
          url: "{{ path_for(getData.URL) }}",
          type: "{{ getData.method }}",
          data: function ( params ) {
            params.year = $("input[name='year").val();
            params.cityID = $('#cityID').val();
            params.cityName = $('#cityName').val();
            params.state = $('#state').val();
            params.searchValue = $('#searchValue').val();
            params.month = $('#month').val();
          },
          error: handleAjaxError
        },
        responsive: true,
        drawCallback: function( oSettings ) {
          // Unstack Pagination
          $('div.ui.pagination.menu')
            .removeClass('stackable')
            .addClass('unstackable')
          ;
        },
        initComplete: function(settings, json) {
          // Unstack Pagination
          $('div.ui.pagination.menu')
            .removeClass('stackable')
            .addClass('unstackable')
          ;
        },
        createdRow: function(row, data, dataIndex) {
          // Deixa as linhas com cores diferentes para indicar o tipo
          // de feriado
          if (data.dayofweek === 'Sábado') {
            $(row).addClass('saturday');
          } else if (data.dayofweek === 'Domingo') {
            $(row).addClass('sunday');
          } else {
            $(row).addClass('weekday');
          }

          $(row).addClass('holiday');
          if (data.delete === 0) {
            $(row).addClass('mobile');
          } else {
            if (data.geographicscope === 'Nacional') {
              $(row).addClass('national');
            } else {
              if (data.geographicscope === 'Estadual') {
                $(row).addClass('regional');
              } else {
                $(row).addClass('local');
              }
            }
          }
        }
      });

      // Manipula os eventos de click
      table
        .on('user-select', function (e, dt, type, cell, originalEvent) {
          if (type === 'cell') {
            var
              // Recupera os dados da célula selecionada
              index   = cell[0][0],

              // Recupera o feriado selecionado
              holiday = dt.rows( index.row ).data().toArray()[0]
            ;

            // Em função da coluna onde ocorreu o clique, executa a ação
            // correspondente
            switch (index.column) {
              case 6:
                {% if authorization.getAuthorizationFor(remove.URL, remove.method) %}
                // Verifica se este feriado pode ser removido (não é um feriado fixo)
                if (holiday.id > 0) {
                  // Permite apagar o feriado selecionado
                  questionDialog(
                    'Remover feriado',
                    'Você deseja realmente remover o feriado <b>&ldquo;' + holiday.name + '&rdquo;</b>? Esta ação não poderá ser desfeita.',
                    function() {
                      // Remove o feriado selecionado
                      var url  = "{{ buildURL(remove.URL, {'holidayID': 'holiday.id'}) }}";

                      deleteJSONData(url, [],
                      function (data, params, message) {
                        // Atualiza a tabela
                        searchLoad();
                      });
                    },
                    function() {
                      table
                        .rows()
                        .deselect()
                      ;
                      table
                        .draw('page')
                      ;
                    }
                  );
                }
                {% endif %}

                break;
              default:
                {% if authorization.getAuthorizationFor(edit.URL, edit.method) %}
                // Verifica se o feriado é editável
                if (holiday.id > 0) {
                  // Coloca o feriado em edição
                  window.location.href = "{{ buildURL(edit.URL, {'holidayID': 'holiday.id'}) }}";
                }
                {% endif %}
            }

            e.preventDefault();
          }
        })
      ;

      // Força a atualização da tabela para reajustar as colunas após
      // a carga
      setTimeout(function() {
        table
          .columns
          .adjust()
        ;
      }, 1500);
    });


    // =================================================[ Options ]=====

    // As opções para o componente de autocompletar o nome da cidade
    var cityNameCompletionOptions = {
      autoSelectFirst: true,
      searchOnFocus: false,
      showClearValue: true,
      ajax: {
        url: "{{ path_for(getCityNameCompletion.URL) }}",
        type: "{{ getCityNameCompletion.method }}",
        data: function(params, options) {
          params.state = '';
        }
      },
      onFormatResult: function(searchTerm, suggestion, index) {
        return ''
          + '<div class="content">'
          +   '<div class="title">' + suggestion.name + ' / '
          +     '<span style="color: CornflowerBlue; font-style: italic;">'
          +       suggestion.state
          +     '</span>'
          +   '</div>'
          + '</div>'
        ;
      },
      onSelect: function(element, suggestion) {
        // Armazena o ID do item selecionado
        $("input[name='cityID']")
          .val(suggestion.id)
        ;
        $("input[name='state']")
          .val(suggestion.state)
        ;
        $("#stateAcronym")
          .html(suggestion.state)
          .trigger("change");

        searchLoad();
      },
      onInvalidateSelection: function() {
        // Limpa os dados
        $("input[name='cityID']")
          .val(0)
        ;
        $("input[name='state']")
          .val("")
        ;
        $("#stateAcronym")
          .html("&nbsp;")
          .trigger("change")
        ;

        searchLoad();
      }
    };

    // ================================================[ Handlers ]=====

    // Executa a pesquisa
    function searchLoad() {
      table
        .ajax
        .reload()
      ;
      setTimeout(function() {
        table
          .columns
          .adjust()
        ;
      }, 500);
    }

    // Força a atualização da tabela
    function forceSearch(event) {
      if (event.which == 13) {
        searchLoad();
      }
    }

    // Codifica elementos para envio na requisição
    function encodeQueryData(data) {
      const ret = [];
      for (let d in data) {
        ret.push(encodeURIComponent(d) + '=' + encodeURIComponent(data[d]));
      }

      return ret.join('&');
    }

    // Adiciona um feriado
    function add() {
      var
        data = {
          'cityid'  : $("input[name='cityID']").val(),
          'cityname': $("input[name='cityName']").val(),
          'state'   : $("input[name='state']").val()
        }
      ;

      const
        url         = "{{ path_for(add.URL) }}",
        queryString = encodeQueryData(data)
      ;

      window.location.href = url + '?' + queryString;
    }

    // Gera um PDF com as informações de feriados na cidade selecionada
    function getPDF() {
      var
        data = {
          'year'     : $("input[name='year").val(),
          'cityID'   : $('#cityID').val(),
          'cityName' : $('#cityName').val(),
          'state'    : $('#state').val()
        }
      ;
      
      const
        url         = "{{ path_for(getPDF.URL) }}",
        queryString = encodeQueryData(data)
      ;

      window.open(url + '?' + queryString, '_blank');
    }

    // Faz o tratamento do campo ano para permitir atualizar os feriados
    // móveis quando ocorrer uma mudança
    function yearHandler()
    {
      var
        year = $(this).val()
      ;

      if (parseInt(year) > 2000) {
        // Atualiza a tabela
        searchLoad();
      } else {
        // Pega o ano corrente e coloca no campo
        var
          today = new Date()
        ;
        
        year = today.getFullYear();

        $('#year')
          .val(year)
        ;

        // Atualiza a tabela
        searchLoad();
      }
    }
  </script>
  {% endapply %}
{% endblock scripts %}
